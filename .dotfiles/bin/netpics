#!/bin/sh

usage() {
    echo "Usage: $(basename "${0}") [collect|prepare|all]" >&2
    exit 0
}

# Copy all PNG and JPEG files from the current directory, the user's home
# directory, and the desktop to the new collection directory
action_collect() {
    dir="pics-$(date +%Y%m%d)"
    cwd=$(pwd)
    case "${cwd}" in
        */"${dir}")
            # The current directory is already the desired collection directory
            cwd=
            dir="."
            ;;
    esac
    find . -mindepth 1 -maxdepth 1 -type f \
        -iregex '.*.\(jpg\|png\)' -print0 | \
        xargs -0 -I '%' -r /bin/sh -c \
        'mkdir -m 0700 -vp '"${dir}"' && cp -nv -t "'"${dir}"'" "%"'
    # If the destination images directory doesn't exist, there are no images
    # and there is nothing to do
    if [ ! -d "${dir}" ]; then
        exit 0
    fi
    cd "${dir}" || exit
}

# Convert all PNG images to JPEG, remove all EXIF data, and create a lower
# resolution image for files larger than 1 megabyte
action_prepare() {
    find . -mindepth 1 -maxdepth 1 -type f -iname '*.png' | while read -r fn; do
        fn_jpg="${fn%.*}.jpg"
        if [ -f "${fn_jpg}" ]; then
            echo "${fn_jpg} already exists, ignoring" >&2
        else
            convert "${fn}" "${fn_jpg}"
        fi
        rm -v "${fn}"
    done
    find . -mindepth 1 -maxdepth 1 -type f -iname '*.jpg' | while read -r fn; do
        # Remove EXIF data
        exiv2 -v rm "${fn}"
        if [ "$(stat -c '%s' "${fn}")" -gt 1048576 ]; then
            # Create lower resolution image
            mkdir -vp "thumb"
            fn_thumb="thumb/${fn%.*}.jpg"
            if [ -f "${fn_thumb}" ]; then
                echo "${fn_thumb} already exists, skipping" >&2
            else
                convert -verbose "${fn}" -resize 1600 "${fn_thumb}"
            fi
        fi
    done
}

# Check if needed programs are installed
for i in convert exiv2; do
    if ! command -v "${i}" >/dev/null 2>&1; then
        echo "Error: ${i} was not found in PATH" >&2
        exit 1
    fi
done

case "${1-all}" in
    help|-h|--help)
        usage
        ;;
    all)
        action_collect
        action_prepare
        ;;
    collect)
        action_collect
        ;;
    prepare)
        action_prepare
        ;;
    *)
        echo "Unknown action \"${1}\"" >&2
        exit 1
        ;;
esac
